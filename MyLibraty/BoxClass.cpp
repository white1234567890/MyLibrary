#include "BoxClass.h"

//////////////////////////////////////////////////////////////////////////////
//コンストラクタ
//////////////////////////////////////////////////////////////////////////////
BoxClass::BoxClass(void)
{
	POSITION p;
	for(int i = 0 ; i < 4 ; i++)
	{
		m_Vertex.m_VertexPosition.push_back(p);
	}
}

//////////////////////////////////////////////////////////////////////////////
//デストラクタ
//////////////////////////////////////////////////////////////////////////////
BoxClass::~BoxClass(void)
{
	m_Vertex.m_VertexPosition.clear();
}

//////////////////////////////////////////////////////////////////////////////
//public関数
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//概略:
//	矩形の4つの頂点を取得する
//戻り値:
//	m_Vertex:矩形の4つの頂点
//////////////////////////////////////////////////////////////////////////////
VARIABLE_VERTEX BoxClass::GetVertex()
{
	return m_Vertex;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	矩形の半長軸の長さを取得する
//戻り値:
//	m_SemiLongAxis:矩形の半長軸の長さ
//////////////////////////////////////////////////////////////////////////////
double BoxClass::GetSemiLongAxis()
{
	return m_SemiLongAxis;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	矩形の半短軸の長さを取得する
//戻り値:
//	m_SemiShortAxis:矩形の半短軸の長さ
//////////////////////////////////////////////////////////////////////////////
double BoxClass::GetSemiShortAxis()
{
	return m_SemiShortAxis;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	矩形の半長軸のベクトルを取得する
//戻り値:
//	m_SemiLongVector:矩形の半長軸のベクトル
//////////////////////////////////////////////////////////////////////////////
THREE_DIMENSION_VECTOR BoxClass::GetSemiLongVector()
{
	return m_SemiLongVector;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	矩形の半短軸のベクトルを取得する
//戻り値:
//	m_SemiShortVector:矩形の半短軸のベクトル
//////////////////////////////////////////////////////////////////////////////
THREE_DIMENSION_VECTOR BoxClass::GetSemiShortVector()
{
	return m_SemiShortVector;
}

//////////////////////////////////////////////////////////////////////////////
//概略:
//	矩形の4つの頂点を算出する
//////////////////////////////////////////////////////////////////////////////
void BoxClass::SetVertex()
{
	m_Vertex.m_VertexPosition[0].m_Vector.x = m_Position.m_Vector.x + m_SemiLongVector.x + m_SemiShortVector.x;
	m_Vertex.m_VertexPosition[0].m_Vector.y = m_Position.m_Vector.y + m_SemiLongVector.y + m_SemiShortVector.y;
	m_Vertex.m_VertexPosition[1].m_Vector.x = m_Position.m_Vector.x + m_SemiLongVector.x - m_SemiShortVector.x;
	m_Vertex.m_VertexPosition[1].m_Vector.y = m_Position.m_Vector.y + m_SemiLongVector.y - m_SemiShortVector.y;
	m_Vertex.m_VertexPosition[2].m_Vector.x = m_Position.m_Vector.x - m_SemiLongVector.x + m_SemiShortVector.x;
	m_Vertex.m_VertexPosition[2].m_Vector.y = m_Position.m_Vector.y - m_SemiLongVector.y + m_SemiShortVector.y;
	m_Vertex.m_VertexPosition[3].m_Vector.x = m_Position.m_Vector.x - m_SemiLongVector.x - m_SemiShortVector.x;
	m_Vertex.m_VertexPosition[3].m_Vector.y = m_Position.m_Vector.y - m_SemiLongVector.y - m_SemiShortVector.y;
}